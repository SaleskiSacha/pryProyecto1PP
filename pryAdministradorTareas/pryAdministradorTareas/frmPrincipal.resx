<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>